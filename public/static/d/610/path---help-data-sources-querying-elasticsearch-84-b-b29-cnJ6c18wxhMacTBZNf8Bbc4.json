{"data":{"Article":{"html":"<p>Redash supports two flavors of Elasticsearch queries, Lucene/string style\nqueries (like Kibana) and the more elaborate JSON based queries. For the first\none create a data source of type  <code>Kibana</code> and for the later create data\nsource of type <code>Elasticsearch</code>.</p>\n<h2>String query example:</h2>\n<ul>\n<li>Query the index named “twitter”</li>\n<li>Filter by “user:kimchy”</li>\n<li>Return the fields: “@timestamp”, “tweet” and “user”</li>\n<li>Return up to 15 results</li>\n<li>Sort by @timestamp ascending</li>\n</ul>\n<pre><code class=\"language-json\">{\n  \"index\": \"twitter\",\n  \"query\": \"user:kimchy\",\n  \"fields\": [\"@timestamp\", \"tweet\", \"user\"],\n  \"limit\": 15,\n  \"sort\": \"@timestamp:asc\"\n}\n</code></pre>\n<h2>Simple query on a logstash Elasticsearch instance:</h2>\n<ul>\n<li>\n<p>Query the index named “logstash-2015.04.* (in this case its all of April 2015)</p>\n</li>\n<li>\n<p>Filter by type:events AND eventName:UserUpgrade AND channel:selfserve</p>\n</li>\n<li>\n<p>Return fields: “@timestamp”, “userId”, “channel”, “utm<em>source”, “utm</em>medium”, “utm<em>campaign”, “utm</em>content”</p>\n</li>\n<li>\n<p>Return up to 250 results</p>\n</li>\n<li>\n<p>Sort by @timestamp ascending</p>\n</li>\n</ul>\n<pre><code class=\"language-json\">{\n  \"index\": \"logstash-2015.04.*\",\n  \"query\": \"type:events AND eventName:UserUpgrade AND channel:selfserve\",\n  \"fields\": [\"@timestamp\", \"userId\", \"channel\", \"utm_source\", \"utm_medium\", \"utm_campaign\", \"utm_content\"],\n  \"limit\": 250,\n  \"sort\": \"@timestamp:asc\"\n}\n</code></pre>\n<h2>JSON document query on a ElasticSearch instance:</h2>\n<ul>\n<li>\n<p>Query the index named “twitter”</p>\n</li>\n<li>\n<p>Filter by user equal “kimchy”</p>\n</li>\n<li>\n<p>Return the fields: “@timestamp”, “tweet” and “user”</p>\n</li>\n<li>\n<p>Return up to 15 results</p>\n</li>\n<li>\n<p>Sort by @timestamp ascending</p>\n</li>\n</ul>\n<pre><code class=\"language-json\">{\n  \"index\": \"twitter\",\n  \"query\": {\n    \"match\": {\n      \"user\": \"kimchy\"\n    }\n  },\n  \"fields\": [\"@timestamp\", \"tweet\", \"user\"],\n  \"limit\": 15,\n  \"sort\": \"@timestamp:asc\"\n}\n</code></pre>\n<h2>A note on authentication</h2>\n<p>Redash has two data sources available for Elasticsearch. You need to use the Amazon Elasticsearch service source if you're using IAM based authentication. Otherwise, use the standard data source.</p>","frontmatter":{"permalink":null,"title":"Querying Elasticsearch","description":null,"keywords":null,"parent_category":"data-sources","category":"querying","toc":null,"layout":null,"hide_topics":null},"parent":{"__typename":"File","relativePath":"kb/data-sources/querying-elasticsearch.md"}},"Parent":{"frontmatter":{"title":"Querying"}},"Section":{"name":"Data Sources"}},"pageContext":{"category":"querying","parent_category":"data-sources","slug":"elasticsearch"}}