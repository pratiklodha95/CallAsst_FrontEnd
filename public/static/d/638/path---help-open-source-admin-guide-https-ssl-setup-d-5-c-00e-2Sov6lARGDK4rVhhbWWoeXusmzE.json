{"data":{"Article":{"html":"<p>{% callout important %}\nThe instructions below are for the legacy images. If you use the new Docker based images, see the following guide:</p>\n<p><a href=\"https://gist.github.com/arikfr/64c9ff8d2f2b703d4e44fe9e45a7730e\">https://gist.github.com/arikfr/64c9ff8d2f2b703d4e44fe9e45a7730e</a>\n{% endcallout %}</p>\n<p>If you used the provided images or the bootstrap script, to start using SSL with your instance you need to:</p>\n<ol>\n<li>Update the nginx config file (<code>/etc/nginx/sites-available/redash</code>) with SSL configuration (see below an example). Make sure to upload the certificate to the server, and set the paths correctly in the new config.</li>\n<li>Open port 443 in your security group (if using AWS or GCE).</li>\n</ol>\n<pre><code>upstream redash_servers {\n  server 127.0.0.1:5000;\n}\n\nserver {\n  listen 80;\n\n  # Allow accessing /ping without https. Useful when placing behind load balancer.\n  location /ping {\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_pass       http://redash_servers;\n  }\n\n  location / {\n    # Enforce SSL.\n    return 301 https://$host$request_uri;\n  }\n}\n\nserver {\n  listen 443 ssl;\n\n  # Make sure to set paths to your certificate .pem and .key files.\n  ssl on;\n  ssl_certificate /path-to/cert.pem; # or crt\n  ssl_certificate_key /path-to/cert.key;\n\n  # Specifies that we don't want to use SSLv2 (insecure) or SSLv3 (exploitable)\n  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n  # Uses the server's ciphers rather than the client's\n  ssl_prefer_server_ciphers on;\n  # Specifies which ciphers are okay and which are not okay. List taken from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html\n  ssl_ciphers \"EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4\";\n\n  access_log /var/log/nginx/redash.access.log;\n\n  gzip on;\n  gzip_types *;\n  gzip_proxied any;\n\n  location / {\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_pass       http://redash_servers;\n    proxy_redirect   off;\n  }\n}\n</code></pre>\n<h2>Using another proxy/load balancer infront of nginx</h2>\n<p>If you setup includes another proxy/load balancer in front of Redash's nginx, you will need to add the following header to your nginx configuration to make sure it knows the correct protocol in use:</p>\n<pre><code>proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;\n</code></pre>","frontmatter":{"permalink":null,"title":"HTTPS (SSL) Setup","description":null,"keywords":null,"parent_category":"open-source","category":"admin-guide","toc":true,"layout":null,"hide_topics":null},"parent":{"__typename":"File","relativePath":"kb/open-source/admin-guide/https-ssl-setup.md"}},"Parent":{"frontmatter":{"title":"Admin Guide"}},"Section":{"name":"Open Source & Self Hosted"}},"pageContext":{"category":"admin-guide","parent_category":"open-source","slug":"https-ssl-setup"}}